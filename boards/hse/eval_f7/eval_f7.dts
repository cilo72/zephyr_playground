/*
 * Copyright (c) 2019 Roland Ma
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <st/f7/stm32f767Xi.dtsi>
#include <st/f7/stm32f767zitx-pinctrl.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>

/*
 * WARNING: The pin PA7 will conflict on selection of SPI_1 and ETH_STM32_HAL.
 *          If you require both peripherals, and you do not need Arduino Uno v3
 *          compatibility, the pin PB5 (also on ST Zio connector) can be used
 *          for the SPI_1 MOSI signal.
 */

/ {
	model = "HSE EVAL board";
	compatible = "st,eval";

	chosen {
		zephyr,console = &cdc_acm_uart0;
		zephyr,shell-uart = &cdc_acm_uart0;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
		zephyr,dtcm = &dtcm;
	};

	leds: leds {
		compatible = "gpio-leds";
		led_200: led_200 {
			gpios = <&gpiog 15 GPIO_ACTIVE_HIGH>;
			label = "LED200";
		};
		led_201: led_201 {
			gpios = <&gpiog 14 GPIO_ACTIVE_HIGH>;
			label = "LED201";
		};
		led_202: led_202 {
			gpios = <&gpiog 13 GPIO_ACTIVE_HIGH>;
			label = "LED202";
		};
	};

	can_id: can_id {
		compatible = "gpio-leds";
		can_id0: can_id0 {
			gpios = <&gpiog 9 GPIO_ACTIVE_LOW>;
			label = "CAN0";
		};
		can_id1: can_id1 {
			gpios = <&gpiog 10 GPIO_ACTIVE_LOW>;
			label = "CAN1";
		};
		can_id2: can_id2 {
			gpios = <&gpiog 11 GPIO_ACTIVE_LOW>;
			label = "CAN2";
		};
		can_id3: can_id3 {
			gpios = <&gpiog 12 GPIO_ACTIVE_LOW>;
			label = "CAN3";
		};
	};


	aliases {
		sled0 = &led_200;
		sled1 = &led_201;
		sled2 = &led_202;
		can0  = &can_id0;
		can1  = &can_id1;
		can2  = &can_id2;
		can3  = &can_id3;
		watchdog0 = &iwdg;
		volt-sensor0 = &vref;
		volt-sensor1 = &vbat;
		dietempaa = &die_temp;
	};
};

&clk_lsi {
	status = "okay";
};

&clk_hse {
	clock-frequency = <DT_FREQ_M(25)>; /* STLink 25MHz clock */
	status = "okay";
};

&pll {
	div-m = <25>;
	mul-n = <432>;
	div-p = <2>;
	div-q = <9>;
	clocks = <&clk_hse>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(216)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <4>;
	apb2-prescaler = <2>;
};

&mac {
	status = "okay";
	pinctrl-0 = <&eth_rxd0_pc4
		     &eth_rxd1_pc5
		     &eth_ref_clk_pa1
		     &eth_crs_dv_pa7
		     &eth_tx_en_pb11
		     &eth_txd0_pb12
		     &eth_txd1_pb13>;
	pinctrl-names = "default";
	phy-connection-type = "rmii";
	phy-handle = <&eth_phy>;
};

&mdio {
	status = "okay";
	pinctrl-0 = <&eth_mdio_pa2 &eth_mdc_pc1>;
	pinctrl-names = "default";

	eth_phy: ethernet-phy@0 {
		compatible = "ethernet-phy";
		reg = <0x00>;
	};
};

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		/*
		 * The two sectors 0-1 (32+32 kbytes) are reserved for
		 * the bootloader.
		 */
		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x0 DT_SIZE_K(64)>;
			read-only;
		};

		/*
		 * The flash starting at offset 0x10000 and ending at
		 * offset 0x1ffff is reserved for use by the application.
		 * This represents sectors 2-3 (32+32 kbytes)
		 */
		storage_partition: partition@10000 {
			label = "storage";
			reg = <0x00010000 DT_SIZE_K(64)>;
		};

		/*
		 * Sector 4 (128 kbytes) unallocated.
		 */

		/*
		 * Allocated 3 (256k x 3) sectors for image-0. Sectors 5-7.
		 */
		slot0_partition: partition@40000 {
			label = "image-0";
			reg = <0x00040000 DT_SIZE_K(768)>;
		};

		/*
		 * Allocated 3 (256k x 3) sectors for image-1. Sectors 8-10.
		 */
		slot1_partition: partition@100000 {
			label = "image-1";
			reg = <0x00100000 DT_SIZE_K(768)>;
		};

		/*
		 * Allocated 1 (256k) sector for image-scratch. Sector 11.
		 */
		scratch_partition: partition@1C0000 {
			label = "image-scratch";
			reg = <0x001C0000 DT_SIZE_K(256)>;
		};
	};
};

&vref {
	status = "okay";
};

&vbat {
	status = "okay";
};

zephyr_udc0: &usbotg_fs {
	pinctrl-0 = <&usb_otg_fs_dm_pa11 &usb_otg_fs_dp_pa12>;
	pinctrl-names = "default";
	status = "okay";
        cdc_acm_uart0: cdc_acm_uart0 {
                compatible = "zephyr,cdc-acm-uart";
                label = "CDC_ACM_0";
        };
};

&die_temp {
	status = "okay";
};

&adc1 {
	status = "okay";
	st,adc-prescaler = <4>;
};